from pythonping import ping
from popular_domains import popular_domains
from datetime import datetime
from art import *

LOG_FILE = "ping_log.txt"
MAX_ALLOWED_RTT = 100


def log_result(message):
    """–ó–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –ª–æ–≥-—Ñ–∞–π–ª"""
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    with open(LOG_FILE, "a", encoding="utf-8") as f:
        f.write(f"[{timestamp}] {message}\n")


def ping_server(host):
    timeout_ms = 90
    try:
        result = ping(host, count=4, timeout=timeout_ms / 1000)

        if result.rtt_avg_ms >= MAX_ALLOWED_RTT:
            raise Exception(f"Timeout - slow response ({result.rtt_avg_ms:.2f} ms ‚â• {MAX_ALLOWED_RTT} ms)")

        success_msg = f"‚úÖ {host}: {result.rtt_avg_ms:.2f} ms"
        print(success_msg)
        log_result(success_msg)
        return True

    except Exception as e:
        error_msg = f"üî¥ {host}: {str(e)}"
        print(f"\n{error_msg}")
        log_result(error_msg)
        return False


def ping_from_file(filename):
    try:
        with open(filename) as f:
            domains = [d.strip() for d in f if d.strip()]

        log_result(f"–ù–∞—á–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞: {filename} ({len(domains)} –¥–æ–º–µ–Ω–æ–≤)")
        print(f"\n–ü—Ä–æ–≤–µ—Ä–∫–∞ {len(domains)} –¥–æ–º–µ–Ω–æ–≤ –∏–∑ {filename}:")
        [ping_server(d) for d in domains]

    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ñ–∞–π–ª–æ–º: {str(e)}"
        print(f"\n‚ùå {error_msg}")
        log_result(error_msg)



actions = {
    '1': lambda: ping_server(input("–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω: ")),
    '2': lambda: ping_from_file(input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ txt —Å –¥–æ–º–µ–Ω–∞–º–∏: ")),
    '3': lambda: (
        log_result(f"–ù–∞—á–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤ ({len(popular_domains)} —à—Ç.)"),
        [ping_server(d) for d in popular_domains]
    )
}

art = text2art("HASIK                 MUDAK")
print(f"{art}")

if __name__ == "__main__":
    try:
        while True:
            log_result("=" * 40 + " –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã " + "=" * 40)
            try:
                mode = input("–†–µ–∂–∏–º (1-—Ä—É—á–Ω–æ–π, 2-—Ñ–∞–π–ª, 3-—Å–ø–∏—Å–æ–∫, 0-–≤—ã—Ö–æ–¥): ")
                if mode == '0':
                    log_result("=" * 40 + " –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã " + "=" * 37 + "\n")
                    break
                actions.get(mode, lambda: print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º"))()
            except Exception as e:
                log_result(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
            finally:
                log_result("=" * 40 + " –ö–æ–Ω–µ—Ü –∏—Ç–µ—Ä–∞—Ü–∏–∏ " + "=" * 40 + "\n")
    except KeyboardInterrupt:
        log_result("=" * 40 + " –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º " + "=" * 25 + "\n")